// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// ActionsColumns holds the columns for the "actions" table.
	ActionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ActionsTable holds the schema information for the "actions" table.
	ActionsTable = &schema.Table{
		Name:        "actions",
		Columns:     ActionsColumns,
		PrimaryKey:  []*schema.Column{ActionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AppsColumns holds the columns for the "apps" table.
	AppsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "tracking_id", Type: field.TypeString, Unique: true},
	}
	// AppsTable holds the schema information for the "apps" table.
	AppsTable = &schema.Table{
		Name:        "apps",
		Columns:     AppsColumns,
		PrimaryKey:  []*schema.Column{AppsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AppStatsColumns holds the columns for the "app_stats" table.
	AppStatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "pageviews", Type: field.TypeInt},
		{Name: "visitors", Type: field.TypeInt},
		{Name: "sessions", Type: field.TypeInt},
		{Name: "bouce_rate", Type: field.TypeFloat64},
		{Name: "known_durations", Type: field.TypeInt},
		{Name: "avg_duration", Type: field.TypeFloat64},
		{Name: "date", Type: field.TypeTime},
		{Name: "app_stats", Type: field.TypeInt, Nullable: true},
	}
	// AppStatsTable holds the schema information for the "app_stats" table.
	AppStatsTable = &schema.Table{
		Name:       "app_stats",
		Columns:    AppStatsColumns,
		PrimaryKey: []*schema.Column{AppStatsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "app_stats_apps_stats",
				Columns: []*schema.Column{AppStatsColumns[8]},

				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DevicesColumns holds the columns for the "devices" table.
	DevicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "version", Type: field.TypeString},
	}
	// DevicesTable holds the schema information for the "devices" table.
	DevicesTable = &schema.Table{
		Name:        "devices",
		Columns:     DevicesColumns,
		PrimaryKey:  []*schema.Column{DevicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// HostnamesColumns holds the columns for the "hostnames" table.
	HostnamesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// HostnamesTable holds the schema information for the "hostnames" table.
	HostnamesTable = &schema.Table{
		Name:        "hostnames",
		Columns:     HostnamesColumns,
		PrimaryKey:  []*schema.Column{HostnamesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PageStatsColumns holds the columns for the "page_stats" table.
	PageStatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "pageviews", Type: field.TypeInt},
		{Name: "visitors", Type: field.TypeInt},
		{Name: "entries", Type: field.TypeInt},
		{Name: "bounce_rate", Type: field.TypeFloat64},
		{Name: "known_durations", Type: field.TypeInt},
		{Name: "avg_duration", Type: field.TypeFloat64},
		{Name: "date", Type: field.TypeTime},
		{Name: "app_page_stats", Type: field.TypeInt, Nullable: true},
		{Name: "hostname_page_stats", Type: field.TypeInt, Nullable: true},
		{Name: "pathname_page_stats", Type: field.TypeInt, Nullable: true},
	}
	// PageStatsTable holds the schema information for the "page_stats" table.
	PageStatsTable = &schema.Table{
		Name:       "page_stats",
		Columns:    PageStatsColumns,
		PrimaryKey: []*schema.Column{PageStatsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "page_stats_apps_page_stats",
				Columns: []*schema.Column{PageStatsColumns[8]},

				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "page_stats_hostnames_page_stats",
				Columns: []*schema.Column{PageStatsColumns[9]},

				RefColumns: []*schema.Column{HostnamesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "page_stats_pathnames_page_stats",
				Columns: []*schema.Column{PageStatsColumns[10]},

				RefColumns: []*schema.Column{PathnamesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PageViewsColumns holds the columns for the "page_views" table.
	PageViewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "hostname", Type: field.TypeString},
		{Name: "pathname", Type: field.TypeString},
		{Name: "referrer", Type: field.TypeString},
		{Name: "is_entry", Type: field.TypeBool},
		{Name: "is_finished", Type: field.TypeBool},
		{Name: "duration", Type: field.TypeInt},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "user_agent", Type: field.TypeString, Nullable: true},
		{Name: "ip_address", Type: field.TypeString, Nullable: true},
		{Name: "screen_dim", Type: field.TypeString, Nullable: true},
		{Name: "extra", Type: field.TypeJSON, Nullable: true},
		{Name: "page_view_app", Type: field.TypeInt, Nullable: true},
		{Name: "page_view_session", Type: field.TypeUUID, Nullable: true},
		{Name: "page_view_user", Type: field.TypeString, Nullable: true},
	}
	// PageViewsTable holds the schema information for the "page_views" table.
	PageViewsTable = &schema.Table{
		Name:       "page_views",
		Columns:    PageViewsColumns,
		PrimaryKey: []*schema.Column{PageViewsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "page_views_apps_app",
				Columns: []*schema.Column{PageViewsColumns[12]},

				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "page_views_sessions_session",
				Columns: []*schema.Column{PageViewsColumns[13]},

				RefColumns: []*schema.Column{SessionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "page_views_users_user",
				Columns: []*schema.Column{PageViewsColumns[14]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PathnamesColumns holds the columns for the "pathnames" table.
	PathnamesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// PathnamesTable holds the schema information for the "pathnames" table.
	PathnamesTable = &schema.Table{
		Name:        "pathnames",
		Columns:     PathnamesColumns,
		PrimaryKey:  []*schema.Column{PathnamesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ScreensColumns holds the columns for the "screens" table.
	ScreensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// ScreensTable holds the schema information for the "screens" table.
	ScreensTable = &schema.Table{
		Name:        "screens",
		Columns:     ScreensColumns,
		PrimaryKey:  []*schema.Column{ScreensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "new_user", Type: field.TypeBool},
		{Name: "is_unique", Type: field.TypeBool},
		{Name: "is_bounce", Type: field.TypeBool},
		{Name: "is_finished", Type: field.TypeBool},
		{Name: "duration", Type: field.TypeInt, Nullable: true},
		{Name: "started_at", Type: field.TypeTime},
		{Name: "finished_at", Type: field.TypeTime, Nullable: true},
		{Name: "session_app", Type: field.TypeInt, Nullable: true},
		{Name: "session_user", Type: field.TypeString, Nullable: true},
		{Name: "session_device", Type: field.TypeString, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "sessions_apps_app",
				Columns: []*schema.Column{SessionsColumns[8]},

				RefColumns: []*schema.Column{AppsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "sessions_users_user",
				Columns: []*schema.Column{SessionsColumns[9]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "sessions_devices_device",
				Columns: []*schema.Column{SessionsColumns[10]},

				RefColumns: []*schema.Column{DevicesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "is_anonymous", Type: field.TypeBool},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActionsTable,
		AppsTable,
		AppStatsTable,
		DevicesTable,
		HostnamesTable,
		PageStatsTable,
		PageViewsTable,
		PathnamesTable,
		ScreensTable,
		SessionsTable,
		UsersTable,
	}
)

func init() {
	AppStatsTable.ForeignKeys[0].RefTable = AppsTable
	PageStatsTable.ForeignKeys[0].RefTable = AppsTable
	PageStatsTable.ForeignKeys[1].RefTable = HostnamesTable
	PageStatsTable.ForeignKeys[2].RefTable = PathnamesTable
	PageViewsTable.ForeignKeys[0].RefTable = AppsTable
	PageViewsTable.ForeignKeys[1].RefTable = SessionsTable
	PageViewsTable.ForeignKeys[2].RefTable = UsersTable
	SessionsTable.ForeignKeys[0].RefTable = AppsTable
	SessionsTable.ForeignKeys[1].RefTable = UsersTable
	SessionsTable.ForeignKeys[2].RefTable = DevicesTable
}
