// Code generated by entc, DO NOT EDIT.

package session

const (
	// Label holds the string label denoting the session type in the database.
	Label = "session"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNewUser holds the string denoting the new_user field in the database.
	FieldNewUser = "new_user"
	// FieldIsUnique holds the string denoting the is_unique field in the database.
	FieldIsUnique = "is_unique"
	// FieldIsBounce holds the string denoting the is_bounce field in the database.
	FieldIsBounce = "is_bounce"
	// FieldIsFinished holds the string denoting the is_finished field in the database.
	FieldIsFinished = "is_finished"
	// FieldDuration holds the string denoting the duration field in the database.
	FieldDuration = "duration"
	// FieldStartedAt holds the string denoting the started_at field in the database.
	FieldStartedAt = "started_at"
	// FieldFinishedAt holds the string denoting the finished_at field in the database.
	FieldFinishedAt = "finished_at"

	// EdgeApp holds the string denoting the app edge name in mutations.
	EdgeApp = "app"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeDevice holds the string denoting the device edge name in mutations.
	EdgeDevice = "device"
	// EdgePageviews holds the string denoting the pageviews edge name in mutations.
	EdgePageviews = "pageviews"

	// Table holds the table name of the session in the database.
	Table = "sessions"
	// AppTable is the table the holds the app relation/edge.
	AppTable = "sessions"
	// AppInverseTable is the table name for the App entity.
	// It exists in this package in order to avoid circular dependency with the "app" package.
	AppInverseTable = "apps"
	// AppColumn is the table column denoting the app relation/edge.
	AppColumn = "session_app"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "sessions"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "session_user"
	// DeviceTable is the table the holds the device relation/edge.
	DeviceTable = "sessions"
	// DeviceInverseTable is the table name for the Device entity.
	// It exists in this package in order to avoid circular dependency with the "device" package.
	DeviceInverseTable = "devices"
	// DeviceColumn is the table column denoting the device relation/edge.
	DeviceColumn = "session_device"
	// PageviewsTable is the table the holds the pageviews relation/edge.
	PageviewsTable = "page_views"
	// PageviewsInverseTable is the table name for the PageView entity.
	// It exists in this package in order to avoid circular dependency with the "pageview" package.
	PageviewsInverseTable = "page_views"
	// PageviewsColumn is the table column denoting the pageviews relation/edge.
	PageviewsColumn = "page_view_session"
)

// Columns holds all SQL columns for session fields.
var Columns = []string{
	FieldID,
	FieldNewUser,
	FieldIsUnique,
	FieldIsBounce,
	FieldIsFinished,
	FieldDuration,
	FieldStartedAt,
	FieldFinishedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Session type.
var ForeignKeys = []string{
	"session_app",
	"session_user",
	"session_device",
}
